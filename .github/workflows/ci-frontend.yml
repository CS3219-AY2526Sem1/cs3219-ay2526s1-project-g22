name: Deploy to Vercel (Fork)

on:
  push:
    branches: [master, "**/*"] # Previews on all branches
  pull_request_target:
    branches: ["master"] # Trigger on all pull requests targeting master
  workflow_dispatch: # Allow manual triggering

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Debug Working Directory
        run: |
          echo "Current working directory: $(pwd)"
          ls -la
          ls -la frontend

      - name: Debug Secrets
        run: |
          echo "VERCEL_ORG_ID=${{ secrets.VERCEL_ORG_ID }}"
          echo "VERCEL_PROJECT_ID=${{ secrets.VERCEL_PROJECT_ID }}"
          echo "VERCEL_TOKEN is set"

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Vercel pull
        working-directory: frontend
        run: npx vercel pull --yes --environment=${{ github.event_name == 'push' && 'production' || 'preview' }} --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Build
        working-directory: frontend
        run: npx vercel build --token=${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Deploy (Preview on PR/branch, Prod on push to master)
        working-directory: frontend
        run: |
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" == "refs/heads/master" ]]; then
            npx vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
          else
            npx vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
          fi
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
